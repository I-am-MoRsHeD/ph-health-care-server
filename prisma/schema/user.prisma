model User {
  id                  String     @id @default(uuid())
  email               String     @unique
  password            String
  role                UserRole   @default(PATIENT)
  needPasswordChanged Boolean    @default(true)
  status              UserStatus @default(ACTIVE)
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  patient             Patient?
  doctor              Doctor?
  admin               Admin?

  @@map("users")
}

model Patient {
  id            String   @id @default(uuid())
  email         String   @unique
  name          String
  profilePhoto  String?
  contactNumber String
  address       String?
  isDeleted     Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user User @relation(fields: [email], references: [email])

  @@map("patients")
}

model Admin {
  id            String   @id @default(uuid())
  email         String   @unique
  name          String
  profilePhoto  String?
  contactNumber String
  isDeleted     Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user User @relation(fields: [email], references: [email])

  @@map("admins")
}

model Doctor {
  id                  String     @id @default(uuid())
  email               String     @unique
  name                String
  profilePhoto        String?
  contactNumber       String
  address             String?
  registrationNumber  String     @unique
  experience          Int        @default(0)
  gender              UserGender
  appointmentFee      Float
  qualification       String
  currentWorkingPlace String
  designation         String
  isDeleted           Boolean    @default(false)
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt

  user User @relation(fields: [email], references: [email])

  @@map("doctors")
}
